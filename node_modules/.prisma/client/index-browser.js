
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.7.1
 * Query Engine version: 272861e07ab64f234d3ffc4094e32bd61775599c
 */
Prisma.prismaVersion = {
  client: "4.7.1",
  engine: "272861e07ab64f234d3ffc4094e32bd61775599c"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.AgendaScalarFieldEnum = makeEnum({
  id: 'id',
  horario: 'horario',
  dia: 'dia',
  agendaId: 'agendaId'
});

exports.Prisma.AgendaStatusScalarFieldEnum = makeEnum({
  id: 'id',
  nomeStatus: 'nomeStatus',
  descricao: 'descricao',
  statusId: 'statusId'
});

exports.Prisma.AgendadoScalarFieldEnum = makeEnum({
  id: 'id',
  agendaId: 'agendaId'
});

exports.Prisma.CategoriaScalarFieldEnum = makeEnum({
  id: 'id',
  nomeCategoria: 'nomeCategoria',
  descricao: 'descricao',
  servicoId: 'servicoId'
});

exports.Prisma.ClienteScalarFieldEnum = makeEnum({
  CPF: 'CPF',
  Nome: 'Nome',
  email: 'email',
  senha: 'senha'
});

exports.Prisma.PrestadorScalarFieldEnum = makeEnum({
  CNPJ: 'CNPJ',
  Nome: 'Nome',
  email: 'email',
  Senha: 'Senha'
});

exports.Prisma.ProdutosScalarFieldEnum = makeEnum({
  id: 'id',
  nomeProduto: 'nomeProduto',
  preco: 'preco',
  descricao: 'descricao'
});

exports.Prisma.ServicoScalarFieldEnum = makeEnum({
  id: 'id',
  NomeServico: 'NomeServico',
  preco: 'preco',
  descricao: 'descricao',
  img: 'img',
  servicoId: 'servicoId'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});


exports.Prisma.ModelName = makeEnum({
  Cliente: 'Cliente',
  Prestador: 'Prestador',
  Servico: 'Servico',
  Categoria: 'Categoria',
  Agenda: 'Agenda',
  AgendaStatus: 'AgendaStatus',
  Agendado: 'Agendado',
  Produtos: 'Produtos'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
